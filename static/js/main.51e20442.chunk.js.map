{"version":3,"sources":["Tokens.js","Transactions.js","App.js","index.js"],"names":["defaultState","newTokenAddress","newTokenName","newTokenDecimals","Tokens","state","handleAddressChange","address","_this","setState","handleNameChange","name","handleDecimalsChange","decimals","handleAdd","props","onTokenAdd","_this2","this","react_default","a","createElement","className","action","noValidate","autoComplete","TextField_default","label","fullWidth","value","onChange","e","target","margin","parseInt","type","Fab_default","color","aria-label","onClick","Add_default","Table_default","aria-labelledby","TableHead_default","TableRow_default","TableCell_default","TableBody_default","tokens","map","token","size","onTokenDelete","Icon_default","Component","createDefaultState","receiver","date","Date","count","period","tokenName","Transactions","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","newState","objectSpread","defineProperty","onTransactionAdd","transactions","txs","sort","b","toISOString","slice","FormControl_default","InputLabel_default","shrink","htmlFor","Select_default","input","Input_default","displayEmpty","MenuItem_default","accept","style","display","id","multiple","Button_default","variant","component","now","onTransactionDelete","offsetDate","offset","getTime","createDefaultTransactions","App","route","update","handleTokenAdd","newTokens","toConsumableArray","concat","handleTokenDelete","filter","handleTransactionsAdd","valuePerTx","newTxs","i","push","handleTransactionsDelete","tx","Fragment","CssBaseline_default","AppBar_default","position","Toolbar_default","src_Transactions_0","src_Tokens_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.51e20442.chunk.js","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport './Tokens.scss';\n\ntype PropsType = {\n  tokens: Array<{\n    address: string,\n    name: string,\n    decimals: number\n  }>,\n  onTokenAdd: (address: string, name: string, decimals: number) => void,\n  onTokenDelete: (address: string) => void,\n};\ntype StateType = {\n  newTokenAddress: string,\n  newTokenName: string,\n  newTokenDecimals: number,\n}\n\nconst defaultState = {\n  newTokenAddress: '',\n  newTokenName: '',\n  newTokenDecimals: 18,\n};\n\nclass Tokens extends Component<PropsType, StateType> {\n\n  state = defaultState;\n\n  handleAddressChange = (address: string) => {\n    this.setState({ newTokenAddress: address });\n  }\n\n  handleNameChange = (name: string) => {\n    this.setState({ newTokenName: name });\n  }\n\n  handleDecimalsChange = (decimals: number) => {\n    this.setState({ newTokenDecimals: decimals });\n  }\n\n  handleAdd = () => {\n    this.props.onTokenAdd(\n      this.state.newTokenAddress,\n      this.state.newTokenName,\n      this.state.newTokenDecimals\n    );\n  }\n\n\n  render() {\n    return (\n      <div className=\"Tokens\">\n        <h4>Add Erc20 token</h4>\n        <form action=\"/\" noValidate autoComplete=\"off\" className=\"form\">\n          <TextField\n            label=\"Token name\"\n            fullWidth\n            className=\"field\"\n            value={this.state.newTokenName}\n            onChange={e => this.handleNameChange(e.target.value)}\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"Contract address\"\n            className=\"field\"\n            fullWidth\n            value={this.state.newTokenAddress}\n            onChange={e => this.handleAddressChange(e.target.value)}\n            margin=\"normal\"\n          />\n\n          <TextField\n            label=\"Token decimals\"\n            fullWidth\n            className=\"field\"\n            value={this.state.newTokenDecimals}\n            onChange={e => this.handleDecimalsChange(parseInt(e.target.value, 10))}\n            type=\"number\"\n            margin=\"normal\"\n          />\n          <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleAdd}>\n            <AddIcon />\n          </Fab>\n        </form>\n        <br />\n        <br />\n        <h4>Tokens</h4>\n        <Table aria-labelledby=\"tableTitle\" className=\"table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Contract address</TableCell>\n              <TableCell>Decimals</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.tokens.map(token => (\n              <TableRow>\n                <TableCell>{token.name}</TableCell>\n                <TableCell>{token.address}</TableCell>\n                <TableCell>{token.decimals}</TableCell>\n                <TableCell>\n                  <Fab\n                    color=\"secondary\"\n                    size=\"small\"\n                    aria-label=\"Add\"\n                    className=\"delete-button\"\n                    onClick={() => this.props.onTokenDelete(token.address)}\n                  >\n                    <Icon>close_icon</Icon>\n                  </Fab>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Tokens;\n","// @flow\n\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport './Transactions.scss';\n\ntype PropsType = {\n  tokens: Array<{\n    address: string,\n    name: string,\n    decimals: number\n  }>,\n  transactions: Array<{\n    address: string,\n    value: number,\n    tokenName: string,\n    date: Date,\n  }>,\n  onTransactionAdd: (receiver: string,\n    date: Date,\n    count: number,\n    period: number,\n    value: number,\n    tokenName: string,\n  ) => void,\n  onTransactionDelete: (Date, string) => void,\n};\n\ntype StateType = {\n  receiver: string,\n  date: Date,\n  count: number,\n  period: number,\n  value: number,\n  tokenName: ?string,\n};\n\n\n\nconst createDefaultState = (name: ?string): StateType => ({\n  receiver: '0x0',\n  date: new Date(),\n  count: 10,\n  period: 1,\n  value: 10000,\n  tokenName: name,\n});\n\nclass Transactions extends Component<PropsType, StateType> {\n\n  constructor(props: PropsType) {\n    super(props);\n    const transactions = props.tokens[0];\n    const name = transactions ? transactions.name : null;\n    this.state = createDefaultState(name);\n  }\n\n  handleChange = (name: string, value: any) => {\n    const newState = { ...this.state, [name]: value };\n    this.setState(newState);\n  }\n\n  handleAdd = () => {\n    this.props.onTransactionAdd(this.state.receiver, this.state.date, this.state.count, this.state.period, this.state.value, this.state.tokenName);\n  }\n\n  render() {\n    const txs = this.props.transactions.sort((a, b) => {\n      if (a.date < b.date) {\n        return -1;\n      }\n      if (a.date === b.date) {\n        return 0;\n      }\n      return 1;\n    });\n    return (\n      <div className=\"Transactions\">\n        <h4>Schedule Erc20 transactions</h4>\n        <form action=\"/\" noValidate autoComplete=\"off\" className=\"form\">\n          <div className=\"container\">\n            <TextField\n              label=\"Start date\"\n              className=\"field\"\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date.toISOString().slice(0, 10)}\n              onChange={e => this.handleChange(e.target.name, new Date(e.target.value))}\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Number of payments\"\n              className=\"field\"\n              name=\"count\"\n              type=\"number\"\n              value={this.state.count}\n              onChange={e => this.handleChange(e.target.name, e.target.value)}\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Payment period (days)\"\n              className=\"field\"\n              name=\"period\"\n              type=\"number\"\n              value={this.state.period}\n              onChange={e => this.handleChange(e.target.name, e.target.value)}\n              margin=\"normal\"\n            />\n          </div>\n          <div className=\"container\">\n            <TextField\n              label=\"Receiver address\"\n              className=\"field\"\n              name=\"receiver\"\n              value={this.state.receiver}\n              onChange={e => this.handleChange(e.target.name, e.target.value)}\n              margin=\"normal\"\n            />\n            <FormControl className=\"field\">\n              <InputLabel shrink htmlFor=\"age-label-placeholder\">\n                Token\n              </InputLabel>\n              <Select\n                value={this.state.tokenName}\n                onChange={e => this.handleChange(e.target.name, e.target.value)}\n                input={<Input name=\"tokenName\" />}\n                displayEmpty\n                name=\"tokenName\"\n              >\n                {this.props.tokens.map(token => (\n                  <MenuItem value={token.name}>{token.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              label=\"Total value\"\n              className=\"field\"\n              name=\"value\"\n              value={this.state.value}\n              onChange={e => this.handleChange(e.target.name, e.target.value)}\n              margin=\"normal\"\n            />\n          </div>\n          <Fab color=\"primary\" aria-label=\"Add\" onClick={this.handleAdd}>\n            <AddIcon />\n          </Fab>\n        </form>\n\n\n        <div className=\"file\">\n          <h5>Or upload a file</h5>\n          <input\n            accept=\"image/*\"\n            style={{ display: 'none' }}\n            id=\"raised-button-file\"\n            multiple\n            type=\"file\"\n          />\n          <label htmlFor=\"raised-button-file\">\n            <Button variant=\"raised\" component=\"span\">\n              Upload a file\n          </Button>\n          </label>\n        </div>\n\n        <h4>Transactions</h4>\n        <Table aria-labelledby=\"tableTitle\" className=\"table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Receiver address</TableCell>\n              <TableCell>Token</TableCell>\n              <TableCell>Value</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {txs.map(transactions => (\n              <TableRow>\n                <TableCell>{transactions.date.toISOString().slice(0, 10)}</TableCell>\n                <TableCell>{transactions.address}</TableCell>\n                <TableCell>{transactions.tokenName}</TableCell>\n                <TableCell>{transactions.value}</TableCell>\n                <TableCell>{transactions.date > Date.now() ? 'scheduled' : 'done'}</TableCell>\n                {(transactions.date > Date.now()) &&\n                  (\n                    <TableCell>\n                      <Fab\n                        color=\"secondary\"\n                        size=\"small\"\n                        aria-label=\"Add\"\n                        className=\"delete-button\"\n                        onClick={() => this.props.onTransactionDelete(transactions.date, transactions.address)}\n                      >\n                        <Icon>close_icon</Icon>\n                      </Fab>\n                    </TableCell>\n                  )\n                }\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Transactions;\n","// @flow\n\nimport React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Tokens from './Tokens';\nimport Transactions from './Transactions';\nimport './App.scss';\n\ntype PropsType = {};\ntype StateType = {\n  tokens: Array<{\n    address: string,\n    name: string,\n    decimals: number\n  }>,\n  transactions: Array<{\n    address: string,\n    value: number,\n    tokenName: string,\n    date: Date,\n  }>,\n  route: string,\n};\n\nconst offsetDate = (date: Date, offset: number) => {\n  return new Date(date.getTime() + 86400000 * offset);\n  // const res = new Date();\n  // res.setDate(date.getDate() + offset);\n  // debugger\n  // return res;\n};\n\nconst createDefaultTransactions = () => {\n  const date = new Date();\n  const address = '0xea674fdde714fd979de3edf0f56aa9716b898ec8';\n  return [\n    {\n      address,\n      value: 100,\n      tokenName: 'ZRX',\n      date: offsetDate(date, -2),\n    },\n    {\n      address,\n      value: 100,\n      tokenName: 'ZRX',\n      date: offsetDate(date, -1),\n    },\n    {\n      address,\n      value: 100,\n      tokenName: 'ZRX',\n      date,\n    },\n    {\n      address,\n      value: 100,\n      tokenName: 'ZRX',\n      date: offsetDate(date, 1),\n    },\n    {\n      address,\n      value: 100,\n      tokenName: 'ZRX',\n      date: offsetDate(date, 2),\n    },\n    {\n      address,\n      value: 100,\n      tokenName: 'ZRX',\n      date: offsetDate(date, 3),\n    },\n  ];\n};\n\n\nclass App extends Component<PropsType, StateType> {\n\n  state = {\n    tokens: [\n      { address: '0xb8c77482e45f1f44de1745f52c74426c631bdd52', name: 'BNB', decimals: 18 },\n      { address: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2', name: 'MKR', decimals: 18 },\n      { address: '0xd26114cd6ee289accf82350c8d8487fedb8a0c07', name: 'OMG', decimals: 18 },\n      { address: '0xe41d2489571d322189246dafa5ebde1f4699f498', name: 'ZRX', decimals: 18 },\n      { address: '0x0d8775f648430679a709e98d2b0cb6250d2887ef', name: 'BAT', decimals: 18 },\n    ],\n    transactions: createDefaultTransactions(),\n    route: 'transactions',\n  }\n\n  update = (newState: StateType) => {\n    this.setState(newState);\n  }\n\n  handleTokenAdd = (address: string, name: string, decimals: number) => {\n    const newTokens = [...this.state.tokens, { address, name, decimals }];\n    this.update({\n      tokens: newTokens,\n      transactions: this.state.transactions,\n      route: this.state.route,\n    });\n  }\n\n  handleTokenDelete = (address: string) => {\n    const newTokens = this.state.tokens.filter(token => token.address !== address);\n    this.update({\n      tokens: newTokens,\n      transactions: this.state.transactions,\n      route: this.state.route,\n    });\n  }\n\n  handleTransactionsAdd = (receiver: string,\n    date: Date,\n    count: number,\n    period: number,\n    value: number,\n    tokenName: string,\n  ) => {\n    const valuePerTx = value / count;\n    const newTxs = [...this.state.transactions];\n    for (let i = 0; i < count; i += 1) {\n      newTxs.push({\n        address: receiver,\n        value: valuePerTx,\n        tokenName,\n        date: offsetDate(date, i * period),\n      });\n    }\n    this.update({\n      tokens: this.state.tokens,\n      transactions: newTxs,\n      route: this.state.route,\n    });\n  }\n\n\n  handleTransactionsDelete = (date: Date, address: string) => {\n    const newTxs = this.state.transactions.filter(tx => (tx.address !== address) || (tx.date !== date));\n    this.update({\n      tokens: this.state.tokens,\n      transactions: newTxs,\n      route: this.state.route,\n    });\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className=\"App\">\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Button className={this.state.route === 'transactions' ? 'underlined' : ''} color=\"inherit\" onClick={() => this.setState({ ...this.state, route: 'transactions' })}>Transactions</Button>\n              <Button className={this.state.route === 'tokens' ? 'underlined' : ''} color=\"inherit\" onClick={() => this.setState({ ...this.state, route: 'tokens' })}>Manage Erc20 Tokens</Button>\n            </Toolbar>\n          </AppBar>\n          <div className=\"router\">\n            {this.state.route === 'transactions' && (\n              <Transactions\n                tokens={this.state.tokens}\n                transactions={this.state.transactions}\n                onTransactionDelete={this.handleTransactionsDelete}\n                onTransactionAdd={this.handleTransactionsAdd}\n              />\n            )}\n            {this.state.route === 'tokens' && (\n              <Tokens\n                tokens={this.state.tokens}\n                onTokenAdd={this.handleTokenAdd}\n                onTokenDelete={this.handleTokenDelete}\n              />\n            )}\n          </div>\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}